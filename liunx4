进程创建/运行/终止/等待/


进程创建
	写时拷贝：先以浅拷贝方式，再需要其中一份发生数据时进行深拷贝
	父子进程各有一份数据，共享一份程序代码-----外挂
	vfork()函数
		-----考虑不用exit(0)/_exit()
		段错误---内存访问出错
		
进程终止
	echo $? :打印上一次程序执行完后的返回值
	退出码：0：程序执行完成，结果正确。
			非0：程序执行完成，结果不正确。
	_exit():系统调用    exit(0):库函数---》底层调用_exit();
	atexit()函数。
	
	%s/vfork/exit/g  :将文本中的vforkt替换成exit。
	
	
	Ctrl+c: 异常终止进程
	
	
	ps aus | grep exit :查询exit进程所对应的进程号
	
	kill -9 进程ID：信号终止程序
		Ctrl+c底层实现相同
	
	
进程等待
	避免僵尸进程
	pid_t wait(int* status) int* status:输出型参数（知识衍生（结构体参数：可带回多个参数））
	
	失败原因：。。。
	阻塞式等待
	
	
	
	
